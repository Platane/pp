version: 2


references:
  workspace_root: &workspace_root
    /home/circleci/project

  node_image: &node_image
    circleci/node:8.9

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root


  node_config: &node_config
    docker:
      - image: *node_image
    working_directory: *workspace_root
  
  gcloud_sdk_config: &gcloud_sdk_config
    docker:
      - image: google/cloud-sdk:190.0.1
    working_directory: *workspace_root
  
  activate_gcloud_sdk: &activate_gcloud_sdk
    run:
      name: activate gcloud sdk
      command: |
        echo $GC_JSON_KEY_FILE >> secret.json
        CLOUDSDK_PYTHON_SITEPACKAGES=1 gcloud auth activate-service-account --key-file secret.json
  
  yarn_cache_restore: &yarn_cache_restore
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "yarn.lock" }}
        - v1-dependencies-

  yarn_install: &yarn_install
    run: yarn install --prefer-offline --frozen-lockfile

  yarn_cache_save: &yarn_cache_save
    save_cache:
      paths:
        - node_modules
      key: v1-dependencies-{{ checksum "yarn.lock" }}

jobs:
  test-build:
    <<: *node_config
    steps:
      - checkout
      - run: 
          working_directory: packages/api
          command: |
            yarn install
            yarn build:test
      - run: 
          working_directory: packages/app
          command: |
            yarn install
            yarn build
      - run:  __tests__/run.sh
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - packages/api/lib
            - packages/api/packages.json
            - packages/app/dist
            
  deploy-asset:
    <<: *gcloud_sdk_config
    steps:
      - *activate_gcloud_sdk
      - *attach_workspace
      - run:
          name: publish into bucket
          working_directory: packages/app
          command: |
            # create the bucket
            # gsutil mb -c STANDARD -l EUROPE-WEST1 -p $GC_PROJECT gs://$BUCKET || echo 1

            # sync the folder dist with the bucket ( options -d is for removing from the bucket )
            gsutil -m rsync -r dist gs://$BUCKET

            # use gzip with this files
            gsutil -m cp -r -z html,css,js,xml,txt,json,map,svg dist/* gs://$BUCKET

            # set the bucket accessibility
            gsutil -m acl set -R -a public-read gs://$BUCKET

            # set the bucket index and 404 files
            gsutil web set -m index.html -e index.html gs://$BUCKET

            # set headers for security purpose
            # will fail : can only set a restricted set of headers
            # gsutil setmeta -h "x-frame-options:SAMEORIGIN" gs://$BUCKET/index.html

  
workflows:
  version: 2
  build-deploy:
    jobs:
      - test-build
      - deploy-asset:
          requires:
            - test-build
